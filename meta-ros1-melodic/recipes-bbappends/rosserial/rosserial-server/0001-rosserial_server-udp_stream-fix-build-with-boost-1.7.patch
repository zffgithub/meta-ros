From 2f01f0925120f8355861162538c39362a7962fef Mon Sep 17 00:00:00 2001
From: Martin Jansa <martin.jansa@lge.com>
Date: Mon, 13 Jan 2020 16:35:08 +0000
Subject: [PATCH] rosserial_server/udp_stream: fix build with boost-1.70.0

based on:
https://gitweb.gentoo.org/repo/gentoo.git/commit/?id=e643269e35dcc9df63a6b042d0fefecbb4c0eb49
modified to support both old and new boost

Upstream-Status: Pending

Signed-off-by: Martin Jansa <martin.jansa@lge.com>
---
 include/rosserial_server/udp_stream.h | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)

diff --git a/include/rosserial_server/udp_stream.h b/include/rosserial_server/udp_stream.h
index 8e4bb0b7..6dc66ee1 100644
--- a/include/rosserial_server/udp_stream.h
+++ b/include/rosserial_server/udp_stream.h
@@ -48,7 +48,9 @@ namespace rosserial_server
 {
 
 using boost::asio::ip::udp;
+#if BOOST_VERSION < 107000
 using boost::asio::handler_type;
+#endif
 
 
 class UdpStream : public udp::socket
@@ -62,9 +64,17 @@ public:
   {
     boost::system::error_code ec;
     const protocol_type protocol = server_endpoint.protocol();
+#if BOOST_VERSION >= 107000
+    udp::socket::open(protocol, ec);
+#else
     this->get_service().open(this->get_implementation(), protocol, ec);
+#endif
     boost::asio::detail::throw_error(ec, "open");
+#if BOOST_VERSION >= 107000
+    bind(server_endpoint, ec);
+#else
     this->get_service().bind(this->get_implementation(), server_endpoint, ec);
+#endif
     boost::asio::detail::throw_error(ec, "bind");
 
     client_endpoint_ = client_endpoint;
@@ -76,6 +86,9 @@ public:
   async_write_some(const ConstBufferSequence& buffers,
       BOOST_ASIO_MOVE_ARG(WriteHandler) handler)
   {
+#if BOOST_VERSION >= 107000
+    return async_send(buffers, handler);
+#else
     // If you get an error on the following line it means that your handler does
     // not meet the documented type requirements for a WriteHandler.
     BOOST_ASIO_WRITE_HANDLER_CHECK(WriteHandler, handler) type_check;
@@ -93,6 +106,7 @@ public:
     return this->get_service().async_send_to(
         this->get_implementation(), buffers, client_endpoint_, 0,
         BOOST_ASIO_MOVE_CAST(WriteHandler)(handler));
+#endif
 #endif
   }
 
@@ -102,6 +116,9 @@ public:
   async_read_some(const MutableBufferSequence& buffers,
       BOOST_ASIO_MOVE_ARG(ReadHandler) handler)
   {
+#if BOOST_VERSION >= 107000
+    return async_receive(buffers, handler);
+#else
     // If you get an error on the following line it means that your handler does
     // not meet the documented type requirements for a ReadHandler.
     BOOST_ASIO_READ_HANDLER_CHECK(ReadHandler, handler) type_check;
@@ -118,6 +135,7 @@ public:
     return this->get_service().async_receive_from(
         this->get_implementation(), buffers, client_endpoint_, 0,
         BOOST_ASIO_MOVE_CAST(ReadHandler)(handler));
+#endif
 #endif
   }
 
