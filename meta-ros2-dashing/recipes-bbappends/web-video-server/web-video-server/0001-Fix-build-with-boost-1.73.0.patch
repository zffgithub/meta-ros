From bef6846ad3d972b3a5691e28e7d48da9fccdd969 Mon Sep 17 00:00:00 2001
From: Martin Jansa <martin.jansa@lge.com>
Date: Mon, 7 Sep 2020 06:43:52 -0700
Subject: [PATCH] Fix build with boost-1.73.0

* fixes:
  web-video-server/1.0.0-1-r0/git/src/web_video_server.cpp:104:97: error: '_1' was not declared in this scope
  web-video-server/1.0.0-1-r0/git/src/web_video_server.cpp:104:101: error: '_2' was not declared in this scope
  web-video-server/1.0.0-1-r0/git/src/web_video_server.cpp:104:105: error: '_3' was not declared in this scope
  web-video-server/1.0.0-1-r0/git/src/web_video_server.cpp:104:109: error: '_4' was not declared in this scope
  web-video-server/1.0.0-1-r0/git/src/web_video_server.cpp:166:80: error: '_1' was not declared in this scope
  web-video-server/1.0.0-1-r0/git/src/web_video_server.cpp:104:97: error: '_1' was not declared in this scope
  web-video-server/1.0.0-1-r0/git/src/web_video_server.cpp:104:101: error: '_2' was not declared in this scope
  web-video-server/1.0.0-1-r0/git/src/web_video_server.cpp:104:105: error: '_3' was not declared in this scope
  web-video-server/1.0.0-1-r0/git/src/web_video_server.cpp:104:109: error: '_4' was not declared in this scope
  web-video-server/1.0.0-1-r0/git/src/web_video_server.cpp:166:80: error: '_1' was not declared in this scope
* as pragma says:
  recipe-sysroot/usr/include/boost/bind.hpp:36:1: note: '#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.'

Upstream-Status: Pending

Signed-off-by: Martin Jansa <martin.jansa@lge.com>
---
 src/web_video_server.cpp | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/src/web_video_server.cpp b/src/web_video_server.cpp
index a442165..e2377dc 100644
--- a/src/web_video_server.cpp
+++ b/src/web_video_server.cpp
@@ -101,17 +101,17 @@ WebVideoServer::WebVideoServer(rclcpp::Node::SharedPtr &nh, rclcpp::Node::Shared
   stream_types_["h264"] = boost::shared_ptr<ImageStreamerType>(new H264StreamerType());
   stream_types_["vp9"] = boost::shared_ptr<ImageStreamerType>(new Vp9StreamerType());
 
-  handler_group_.addHandlerForPath("/", boost::bind(&WebVideoServer::handle_list_streams, this, _1, _2, _3, _4));
-  handler_group_.addHandlerForPath("/stream", boost::bind(&WebVideoServer::handle_stream, this, _1, _2, _3, _4));
+  handler_group_.addHandlerForPath("/", boost::bind(&WebVideoServer::handle_list_streams, this, boost::placeholders::_1, boost::placeholders::_2, boost::placeholders::_3, boost::placeholders::_4));
+  handler_group_.addHandlerForPath("/stream", boost::bind(&WebVideoServer::handle_stream, this, boost::placeholders::_1, boost::placeholders::_2, boost::placeholders::_3, boost::placeholders::_4));
   handler_group_.addHandlerForPath("/stream_viewer",
-                                   boost::bind(&WebVideoServer::handle_stream_viewer, this, _1, _2, _3, _4));
-  handler_group_.addHandlerForPath("/snapshot", boost::bind(&WebVideoServer::handle_snapshot, this, _1, _2, _3, _4));
+                                   boost::bind(&WebVideoServer::handle_stream_viewer, this, boost::placeholders::_1, boost::placeholders::_2, boost::placeholders::_3, boost::placeholders::_4));
+  handler_group_.addHandlerForPath("/snapshot", boost::bind(&WebVideoServer::handle_snapshot, this, boost::placeholders::_1, boost::placeholders::_2, boost::placeholders::_3, boost::placeholders::_4));
 
   try
   {
     server_.reset(
         new async_web_server_cpp::HttpServer(address_, boost::lexical_cast<std::string>(port_),
-                                             boost::bind(ros_connection_logger, handler_group_, _1, _2, _3, _4),
+                                             boost::bind(ros_connection_logger, handler_group_, boost::placeholders::_1, boost::placeholders::_2, boost::placeholders::_3, boost::placeholders::_4),
                                              server_threads));
   }
   catch(boost::exception& e)
@@ -163,7 +163,7 @@ void WebVideoServer::cleanup_inactive_streams()
   {
     typedef std::vector<boost::shared_ptr<ImageStreamer> >::iterator itr_type;
     itr_type new_end = std::partition(image_subscribers_.begin(), image_subscribers_.end(),
-                                      !boost::bind(&ImageStreamer::isInactive, _1));
+                                      !boost::bind(&ImageStreamer::isInactive, boost::placeholders::_1));
     if (__verbose)
     {
       for (itr_type itr = new_end; itr < image_subscribers_.end(); ++itr)
-- 
2.17.1

